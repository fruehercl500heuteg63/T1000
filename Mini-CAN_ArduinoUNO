#include <SPI.h>
#include <mcp_can.h>

// Definiere den CS Pin (Standardmäßig Pin 10)
const int SPI_CS_PIN = 10;
MCP_CAN CAN(SPI_CS_PIN);

void setup() {
  Serial.begin(115200);
  
  // Initialisiere den CAN-Bus mit 500 kbps
  if (CAN.begin(MCP_ANY, CAN_250KBPS, MCP_8MHZ) == CAN_OK) {
    Serial.println("MCP2515 Initialized Successfully!");
  } else {
    Serial.println("Error Initializing MCP2515...");
    while (1);
  }
  
  // Setze den CAN-Bus in den normalen Modus
  CAN.setMode(MCP_NORMAL);
  Serial.println("CAN BUS Shield Initialized");
}

void loop() {
  // Prüfe, ob eine Nachricht verfügbar ist
  if (CAN_MSGAVAIL == CAN.checkReceive()) {
    long unsigned int rxId;
    unsigned char len = 0;
    unsigned char rxBuf[8];
    
    // Lese die Nachricht
    CAN.readMsgBuf(&rxId, &len, rxBuf);
    
    // Ausgabe der empfangenen Nachricht
    Serial.print("Message Received: ID = 0x");
    Serial.print(rxId, HEX);
    Serial.print(", Data = ");
    for (int i = 0; i < len; i++) {
      Serial.print(rxBuf[i], HEX);
      Serial.print(" ");
    }
    Serial.println();
  }
  
  delay(100); // Kurze Verzögerung
}
