#include <SPI.h>
#include <mcp_can.h>

// Definiere den CS-Pin für das MCP2515-Modul
#define CAN0_INT 4   // Interrupt-Pin (optional)
MCP_CAN CAN0(5);     // CS-Pin (GPIO 5)

void setup() {
    Serial.begin(115200);

    // Initialisiere das MCP2515-Modul an CS-Pin 5
    if (CAN0.begin(MCP_ANY, CAN_250KBPS, MCP_8MHZ) == CAN_OK) {
        Serial.println("MCP2515 Initialized Successfully!");
    } else {
        Serial.println("Error Initializing MCP2515...");
        while (1);
    }

    CAN0.setMode(MCP_NORMAL);   // Setzt den MCP2515 in den Normalmodus

    pinMode(CAN0_INT, INPUT);   // Setzt den Interrupt-Pin als Eingang
}

void loop() {
    if (!digitalRead(CAN0_INT)) {  // Überprüfe, ob eine Nachricht empfangen wurde
        long unsigned int rxId;
        unsigned char len = 0;
        unsigned char rxBuf[8];
        CAN0.readMsgBuf(&rxId, &len, rxBuf);  // Liest die empfangene Nachricht

        Serial.print("ID: ");
        Serial.print(rxId, HEX);
        Serial.print(" DLC: ");
        Serial.print(len);
        Serial.print(" Data: ");

        for (int i = 0; i < len; i++) {  // Ausgabe der Daten im seriellen Monitor
            Serial.print(rxBuf[i], HEX);
            Serial.print(" ");
        }
    }
}
        
